# Test Configuration for Broker Online Application
# Used by CI/CD pipeline and local testing

# ============================================================================
# SPRING PROFILES
# ============================================================================
spring.profiles.active=test

# ============================================================================
# MOCK KITE API CONFIGURATION (Safe for CI/CD)
# ============================================================================
kite.api_key=test_api_key_12345
kite.api_secret=test_api_secret_67890
kite.user_id=test_user_id
kite.mock_mode=true

# ============================================================================
# DATABASE CONFIGURATION (Test Database)
# ============================================================================
# H2 for unit tests (fast, in-memory)
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# PostgreSQL for integration tests (set via environment variables)
# POSTGRES_URL=jdbc:postgresql://localhost:5432/broker_test
# POSTGRES_USER=test_user
# POSTGRES_PASSWORD=test_password

# ============================================================================
# JPA/HIBERNATE CONFIGURATION
# ============================================================================
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# ============================================================================
# SERVER CONFIGURATION
# ============================================================================
server.port=8080
server.servlet.context-path=/
server.servlet.session.timeout=30m
server.servlet.session.cookie.name=BROKERTESTSESSIONID
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=false
server.servlet.session.cookie.same-site=strict

# ============================================================================
# MANAGEMENT/ACTUATOR CONFIGURATION
# ============================================================================
management.endpoints.web.exposure.include=health,metrics,info
management.endpoint.health.show-details=always
management.health.defaults.enabled=true

# Disable external health checks for testing
management.health.kite.enabled=false
management.health.websocket.enabled=false
management.health.diskspace.enabled=false

# ============================================================================
# LOGGING CONFIGURATION
# ============================================================================
logging.level.org.mandrin.rain.broker=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.springframework.security=INFO
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.com.zaxxer.hikari=WARN

# ============================================================================
# WEBSOCKET CONFIGURATION
# ============================================================================
# Disable external WebSocket connections for testing
websocket.kite.enabled=false
websocket.mock.enabled=true

# ============================================================================
# TESTING SPECIFIC CONFIGURATION
# ============================================================================
# Disable background schedulers during testing
spring.task.scheduling.pool.size=0

# Disable caching for predictable test results
spring.cache.type=none

# Faster startup for tests
spring.jpa.defer-datasource-initialization=false
spring.sql.init.mode=embedded

# Test data initialization
spring.datasource.initialization-mode=always
spring.sql.init.schema-locations=classpath:test-schema.sql
spring.sql.init.data-locations=classpath:integration-testing.sql

# ============================================================================
# MOCK CONFIGURATIONS (using unified config approach)
# ============================================================================
# Enable mock session for testing
kite.dev.auto_session=true
kite.dev.mock_session=true

# Mock external service responses
mock.kite.api.enabled=true
mock.kite.api.profile.user_id=test_user
mock.kite.api.profile.user_name=Test User
mock.kite.api.profile.email=test@example.com

mock.kite.api.holdings.enabled=true
mock.kite.api.orders.enabled=true
mock.kite.api.instruments.enabled=true

# ============================================================================
# SECURITY CONFIGURATION
# ============================================================================
# Relaxed security for testing
spring.security.user.name=test
spring.security.user.password=test
spring.security.user.roles=USER

# Disable CSRF for API testing
security.csrf.enabled=false

# ============================================================================
# PERFORMANCE CONFIGURATION
# ============================================================================
# Optimize for testing performance
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false

# Connection pool for testing
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000

# ============================================================================
# ERROR HANDLING
# ============================================================================
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=on_param
server.error.include-exception=false